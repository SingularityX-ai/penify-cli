<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classcommit__analyzer_1_1CommitDocGenHook" xml:lang="en-US">
<title>commit_analyzer.CommitDocGenHook Class Reference</title>
<indexterm><primary>commit_analyzer.CommitDocGenHook</primary></indexterm>
Collaboration diagram for commit_analyzer.CommitDocGenHook:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classcommit__analyzer_1_1CommitDocGenHook__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_classcommit__analyzer_1_1CommitDocGenHook_1a268ed00104309144d07466f611054256">__init__</link> (self, str <link linkend="_classcommit__analyzer_1_1CommitDocGenHook_1a9c0f97f01a967edd3c8a5492cb9e8237">repo_path</link>, <link linkend="_classapi__client_1_1APIClient">APIClient</link> <link linkend="_classcommit__analyzer_1_1CommitDocGenHook_1abcb9ff0e33b723efae1851f6252daddd">api_client</link>)</para>
</listitem>
            <listitem><para>def <link linkend="_classcommit__analyzer_1_1CommitDocGenHook_1a37039dc91ec22f6eb93fa4f7d8a3ac46">get_repo_details</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classcommit__analyzer_1_1CommitDocGenHook_1ab9c936e89244a1aec6e7f5d493ffd4c3">get_summary</link> (self, str instruction)</para>
</listitem>
            <listitem><para>def <link linkend="_classcommit__analyzer_1_1CommitDocGenHook_1abca6ddee46bf3b0d40019b677443a2f6">run</link> (self, Optional[str] msg, bool edit_commit_message)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classcommit__analyzer_1_1CommitDocGenHook_1a9c0f97f01a967edd3c8a5492cb9e8237">repo_path</link></para>
</listitem>
            <listitem><para><link linkend="_classcommit__analyzer_1_1CommitDocGenHook_1abcb9ff0e33b723efae1851f6252daddd">api_client</link></para>
</listitem>
            <listitem><para><link linkend="_classcommit__analyzer_1_1CommitDocGenHook_1ad5297f68e5d4df58ffcc7c2c0556e1e6">repo</link></para>
</listitem>
            <listitem><para><link linkend="_classcommit__analyzer_1_1CommitDocGenHook_1a8814e69d03a2ca9fe897acc8ae02535c">supported_file_types</link></para>
</listitem>
            <listitem><para><link linkend="_classcommit__analyzer_1_1CommitDocGenHook_1adaa6d37ea3f0f2096220099f132c5f53">repo_details</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_classcommit__analyzer_1_1CommitDocGenHook_1ad902038e7e23d85c1284774fb3175e98">_amend_commit</link> (self)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classcommit__analyzer_1_1CommitDocGenHook_1a268ed00104309144d07466f611054256"/><section>
    <title>__init__()</title>
<indexterm><primary>__init__</primary><secondary>commit_analyzer.CommitDocGenHook</secondary></indexterm>
<indexterm><primary>commit_analyzer.CommitDocGenHook</primary><secondary>__init__</secondary></indexterm>
<para><computeroutput>def commit_analyzer.CommitDocGenHook.__init__ ( self, str repo_path, <link linkend="_classapi__client_1_1APIClient">APIClient</link> api_client)</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classcommit__analyzer_1_1CommitDocGenHook_1ad902038e7e23d85c1284774fb3175e98"/><section>
    <title>_amend_commit()</title>
<indexterm><primary>_amend_commit</primary><secondary>commit_analyzer.CommitDocGenHook</secondary></indexterm>
<indexterm><primary>commit_analyzer.CommitDocGenHook</primary><secondary>_amend_commit</secondary></indexterm>
<para><computeroutput>def commit_analyzer.CommitDocGenHook._amend_commit ( self)<computeroutput>[private]</computeroutput></computeroutput></para>
<para><literallayout><computeroutput>Open the default git editor for editing the commit message.

This function changes the current working directory to the repository
path, runs the git command to amend the last commit, and opens the
default editor for the user to modify the commit message. After the
operation, it returns to the original directory.
</computeroutput></literallayout> </para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classcommit__analyzer_1_1CommitDocGenHook_ad902038e7e23d85c1284774fb3175e98_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classcommit__analyzer_1_1CommitDocGenHook_1a37039dc91ec22f6eb93fa4f7d8a3ac46"/><section>
    <title>get_repo_details()</title>
<indexterm><primary>get_repo_details</primary><secondary>commit_analyzer.CommitDocGenHook</secondary></indexterm>
<indexterm><primary>commit_analyzer.CommitDocGenHook</primary><secondary>get_repo_details</secondary></indexterm>
<para><computeroutput>def commit_analyzer.CommitDocGenHook.get_repo_details ( self)</computeroutput></para>
<para><literallayout><computeroutput>Get the details of the repository, including the hosting service,
organization name, and repository name.

This method checks the remote URL of the repository to determine whether
it is hosted on GitHub, Azure DevOps, Bitbucket, GitLab, or another
service. It extracts the organization (or user) name and the repository
name from the URL. If the hosting service is not recognized, it will
return &quot;Unknown Hosting Service&quot;. The method handles potential errors
during the extraction process and returns a dictionary with the relevant
details.

Returns:
    dict: A dictionary containing the organization name, repository name, and
        hosting service.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classcommit__analyzer_1_1CommitDocGenHook_1ab9c936e89244a1aec6e7f5d493ffd4c3"/><section>
    <title>get_summary()</title>
<indexterm><primary>get_summary</primary><secondary>commit_analyzer.CommitDocGenHook</secondary></indexterm>
<indexterm><primary>commit_analyzer.CommitDocGenHook</primary><secondary>get_summary</secondary></indexterm>
<para><computeroutput>def commit_analyzer.CommitDocGenHook.get_summary ( self, str instruction)</computeroutput></para>
<para><literallayout><computeroutput>Generate a summary for the commit based on the staged changes.

This function retrieves the differences of the staged changes in the
repository and generates a commit summary using the provided
instruction. If there are no changes staged for commit, an exception is
raised.

Args:
    instruction (str): A string containing instructions for generating the commit summary.

Returns:
    str: The generated commit summary based on the staged changes and provided
        instruction.

Raises:
    Exception: If there are no changes staged for commit.
</computeroutput></literallayout> </para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classcommit__analyzer_1_1CommitDocGenHook_ab9c936e89244a1aec6e7f5d493ffd4c3_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classcommit__analyzer_1_1CommitDocGenHook_1abca6ddee46bf3b0d40019b677443a2f6"/><section>
    <title>run()</title>
<indexterm><primary>run</primary><secondary>commit_analyzer.CommitDocGenHook</secondary></indexterm>
<indexterm><primary>commit_analyzer.CommitDocGenHook</primary><secondary>run</secondary></indexterm>
<para><computeroutput>def commit_analyzer.CommitDocGenHook.run ( self, Optional[str] msg, bool edit_commit_message)</computeroutput></para>
<para><literallayout><computeroutput>Run the post-commit hook.

This method retrieves the list of modified files from the last commit
and processes each file. It stages any files that have been modified
during processing and creates an auto-commit if changes were made. A
progress bar is displayed to indicate the processing status of each
file. If there is an error generating the commit summary, an exception
is raised.

Args:
    msg (Optional[str]): An optional message to include in the commit.
    edit_commit_message (bool): A flag indicating whether to open the
        git commit edit terminal after committing.

Raises:
    Exception: If there is an error generating the commit summary.
</computeroutput></literallayout> </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classcommit__analyzer_1_1CommitDocGenHook_abca6ddee46bf3b0d40019b677443a2f6_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classcommit__analyzer_1_1CommitDocGenHook_1abcb9ff0e33b723efae1851f6252daddd"/><section>
    <title>api_client</title>
<indexterm><primary>api_client</primary><secondary>commit_analyzer.CommitDocGenHook</secondary></indexterm>
<indexterm><primary>commit_analyzer.CommitDocGenHook</primary><secondary>api_client</secondary></indexterm>
<para><computeroutput>commit_analyzer.CommitDocGenHook.api_client</computeroutput></para></section>
<anchor xml:id="_classcommit__analyzer_1_1CommitDocGenHook_1ad5297f68e5d4df58ffcc7c2c0556e1e6"/><section>
    <title>repo</title>
<indexterm><primary>repo</primary><secondary>commit_analyzer.CommitDocGenHook</secondary></indexterm>
<indexterm><primary>commit_analyzer.CommitDocGenHook</primary><secondary>repo</secondary></indexterm>
<para><computeroutput>commit_analyzer.CommitDocGenHook.repo</computeroutput></para></section>
<anchor xml:id="_classcommit__analyzer_1_1CommitDocGenHook_1adaa6d37ea3f0f2096220099f132c5f53"/><section>
    <title>repo_details</title>
<indexterm><primary>repo_details</primary><secondary>commit_analyzer.CommitDocGenHook</secondary></indexterm>
<indexterm><primary>commit_analyzer.CommitDocGenHook</primary><secondary>repo_details</secondary></indexterm>
<para><computeroutput>commit_analyzer.CommitDocGenHook.repo_details</computeroutput></para></section>
<anchor xml:id="_classcommit__analyzer_1_1CommitDocGenHook_1a9c0f97f01a967edd3c8a5492cb9e8237"/><section>
    <title>repo_path</title>
<indexterm><primary>repo_path</primary><secondary>commit_analyzer.CommitDocGenHook</secondary></indexterm>
<indexterm><primary>commit_analyzer.CommitDocGenHook</primary><secondary>repo_path</secondary></indexterm>
<para><computeroutput>commit_analyzer.CommitDocGenHook.repo_path</computeroutput></para></section>
<anchor xml:id="_classcommit__analyzer_1_1CommitDocGenHook_1a8814e69d03a2ca9fe897acc8ae02535c"/><section>
    <title>supported_file_types</title>
<indexterm><primary>supported_file_types</primary><secondary>commit_analyzer.CommitDocGenHook</secondary></indexterm>
<indexterm><primary>commit_analyzer.CommitDocGenHook</primary><secondary>supported_file_types</secondary></indexterm>
<para><computeroutput>commit_analyzer.CommitDocGenHook.supported_file_types</computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
/tmp/github_repos_arch_doc_gen/SingularityX-ai/penify-cli/penify_hook/<link linkend="_commit__analyzer_8py">commit_analyzer.py</link></section>
</section>
