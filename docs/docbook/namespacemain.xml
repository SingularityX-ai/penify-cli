<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespacemain" xml:lang="en-US">
<title>main Namespace Reference</title>
<indexterm><primary>main</primary></indexterm>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_namespacemain_1a3e494c4723342a16da721b682c2ad95d">install_git_hook</link> (location, token)</para>
</listitem>
            <listitem><para>def <link linkend="_namespacemain_1a1dd4c4eb546efac3d25779ebb7e23d8c">uninstall_git_hook</link> (location)</para>
</listitem>
            <listitem><para>def <link linkend="_namespacemain_1a6568610bf9f969e7129f30417d1ec212">generate_doc</link> (token, file_path=None, complete_folder_path=None, git_folder_path=None)</para>
</listitem>
            <listitem><para>def <link linkend="_namespacemain_1a5754b28669981f6ed6b3d5c62aef259f">commit_code</link> (str gf_path, str token, str message, bool open_terminal)</para>
</listitem>
            <listitem><para>def <link linkend="_namespacemain_1a8cf2a5becaa2433301d49eed685f49a6">save_credentials</link> (api_key)</para>
</listitem>
            <listitem><para>def <link linkend="_namespacemain_1a325d966924c7c2622fcc50c3626bc8ed">login</link> ()</para>
</listitem>
            <listitem><para>def <link linkend="_namespacemain_1af6cd733a1e7a34da9a58510285b63bc7">get_token</link> (passed_token)</para>
</listitem>
            <listitem><para>def <link linkend="_namespacemain_1af613cea4cba4fb7de8e40896b3368945">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>string <link linkend="_namespacemain_1ac715999c10e838574d30a343243bc54a">HOOK_FILENAME</link> = &quot;post-commit&quot;</para>
</listitem>
            <listitem><para>string <link linkend="_namespacemain_1ac6a9c57b7ff6db3365956d489a2ddcd7">HOOK_TEMPLATE</link></para>
</listitem>
            <listitem><para>string <link linkend="_namespacemain_1a5cda5552714bcfd2511cb8e0a5c8a785">api_url</link> = &apos;https://production-gateway.snorkell.ai/api&apos;</para>
</listitem>
            <listitem><para>string <link linkend="_namespacemain_1a1fb31e86e65fca9941931147cf5e18d8">dashboard_url</link> = &quot;https://dashboard.penify.dev/auth/localhost/<link linkend="_namespacemain_1a325d966924c7c2622fcc50c3626bc8ed">login</link>&quot;</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_namespacemain_1a5754b28669981f6ed6b3d5c62aef259f"/><section>
    <title>commit_code()</title>
<indexterm><primary>commit_code</primary><secondary>main</secondary></indexterm>
<indexterm><primary>main</primary><secondary>commit_code</secondary></indexterm>
<para><computeroutput>def main.commit_code (str gf_path, str token, str message, bool open_terminal)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacemain_a5754b28669981f6ed6b3d5c62aef259f_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacemain_1a6568610bf9f969e7129f30417d1ec212"/><section>
    <title>generate_doc()</title>
<indexterm><primary>generate_doc</primary><secondary>main</secondary></indexterm>
<indexterm><primary>main</primary><secondary>generate_doc</secondary></indexterm>
<para><computeroutput>def main.generate_doc ( token,  file_path = <computeroutput>None</computeroutput>
,  complete_folder_path = <computeroutput>None</computeroutput>
,  git_folder_path = <computeroutput>None</computeroutput>
)</computeroutput></para>
<para><literallayout><computeroutput>Generates documentation based on the given parameters.
Parameters:
- token (str): The API token for authentication.
- file_path (str, optional): The path to a specific file to generate documentation for.
- complete_folder_path (str, optional): The path to a complete folder to generate documentation for.
- git_folder_path (str, optional): The path to a Git repository folder to generate documentation for.
</computeroutput></literallayout> </para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacemain_a6568610bf9f969e7129f30417d1ec212_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacemain_1af6cd733a1e7a34da9a58510285b63bc7"/><section>
    <title>get_token()</title>
<indexterm><primary>get_token</primary><secondary>main</secondary></indexterm>
<indexterm><primary>main</primary><secondary>get_token</secondary></indexterm>
<para><computeroutput>def main.get_token ( passed_token)</computeroutput></para>
<para><literallayout><computeroutput>Get the token based on priority:
1. Passed parameter
2. Environment variable
3. Config file
</computeroutput></literallayout> </para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacemain_af6cd733a1e7a34da9a58510285b63bc7_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacemain_1a3e494c4723342a16da721b682c2ad95d"/><section>
    <title>install_git_hook()</title>
<indexterm><primary>install_git_hook</primary><secondary>main</secondary></indexterm>
<indexterm><primary>main</primary><secondary>install_git_hook</secondary></indexterm>
<para><computeroutput>def main.install_git_hook ( location,  token)</computeroutput></para>
<para><literallayout><computeroutput>Install a post-commit hook in the specified location.
Args:
    location (str): The path to the Git repository.
    token (str): The token to be used in the hook.
Raises:
    SystemExit: If the hooks directory does not exist.
Returns:
    None
</computeroutput></literallayout> </para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacemain_a3e494c4723342a16da721b682c2ad95d_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacemain_1a325d966924c7c2622fcc50c3626bc8ed"/><section>
    <title>login()</title>
<indexterm><primary>login</primary><secondary>main</secondary></indexterm>
<indexterm><primary>main</primary><secondary>login</secondary></indexterm>
<para><computeroutput>def main.login ( )</computeroutput></para>
<para><literallayout><computeroutput>Open the login page in a web browser and listen for the redirect URL to capture the token.
</computeroutput></literallayout> </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacemain_a325d966924c7c2622fcc50c3626bc8ed_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacemain_a325d966924c7c2622fcc50c3626bc8ed_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacemain_1af613cea4cba4fb7de8e40896b3368945"/><section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>main</secondary></indexterm>
<indexterm><primary>main</primary><secondary>main</secondary></indexterm>
<para><computeroutput>def main.main ( )</computeroutput></para>
<para><literallayout><computeroutput>Main entry point for the Penify CLI tool.

This function sets up the command-line interface (CLI) for managing Git
hooks and generating documentation. It utilizes the argparse library to
define various subcommands, including installing and uninstalling Git
hooks, generating documentation, committing changes, and logging in to
obtain an API token. The function also handles the retrieval of the API
token based on user input or environment variables and executes the
appropriate subcommand based on user selection.
</computeroutput></literallayout> </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacemain_af613cea4cba4fb7de8e40896b3368945_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacemain_1a8cf2a5becaa2433301d49eed685f49a6"/><section>
    <title>save_credentials()</title>
<indexterm><primary>save_credentials</primary><secondary>main</secondary></indexterm>
<indexterm><primary>main</primary><secondary>save_credentials</secondary></indexterm>
<para><computeroutput>def main.save_credentials ( api_key)</computeroutput></para>
<para><literallayout><computeroutput>Save the token and API keys in the .penify file in the user&apos;s home directory.
</computeroutput></literallayout> </para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacemain_a8cf2a5becaa2433301d49eed685f49a6_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacemain_1a1dd4c4eb546efac3d25779ebb7e23d8c"/><section>
    <title>uninstall_git_hook()</title>
<indexterm><primary>uninstall_git_hook</primary><secondary>main</secondary></indexterm>
<indexterm><primary>main</primary><secondary>uninstall_git_hook</secondary></indexterm>
<para><computeroutput>def main.uninstall_git_hook ( location)</computeroutput></para>
<para><literallayout><computeroutput>Uninstalls the post-commit hook from the specified location.
Parameters:
- location (str): The path to the directory containing the Git repository.
Returns:
None
</computeroutput></literallayout> </para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacemain_a1dd4c4eb546efac3d25779ebb7e23d8c_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_namespacemain_1a5cda5552714bcfd2511cb8e0a5c8a785"/><section>
    <title>api_url</title>
<indexterm><primary>api_url</primary><secondary>main</secondary></indexterm>
<indexterm><primary>main</primary><secondary>api_url</secondary></indexterm>
<para><computeroutput>string main.api_url = &apos;https://production-gateway.snorkell.ai/api&apos;</computeroutput></para></section>
<anchor xml:id="_namespacemain_1a1fb31e86e65fca9941931147cf5e18d8"/><section>
    <title>dashboard_url</title>
<indexterm><primary>dashboard_url</primary><secondary>main</secondary></indexterm>
<indexterm><primary>main</primary><secondary>dashboard_url</secondary></indexterm>
<para><computeroutput>string main.dashboard_url = &quot;https://dashboard.penify.dev/auth/localhost/<link linkend="_namespacemain_1a325d966924c7c2622fcc50c3626bc8ed">login</link>&quot;</computeroutput></para></section>
<anchor xml:id="_namespacemain_1ac715999c10e838574d30a343243bc54a"/><section>
    <title>HOOK_FILENAME</title>
<indexterm><primary>HOOK_FILENAME</primary><secondary>main</secondary></indexterm>
<indexterm><primary>main</primary><secondary>HOOK_FILENAME</secondary></indexterm>
<para><computeroutput>string main.HOOK_FILENAME = &quot;post-commit&quot;</computeroutput></para></section>
<anchor xml:id="_namespacemain_1ac6a9c57b7ff6db3365956d489a2ddcd7"/><section>
    <title>HOOK_TEMPLATE</title>
<indexterm><primary>HOOK_TEMPLATE</primary><secondary>main</secondary></indexterm>
<indexterm><primary>main</primary><secondary>HOOK_TEMPLATE</secondary></indexterm>
<para><computeroutput>string main.HOOK_TEMPLATE</computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">1 =&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;#!/bin/sh</emphasis>
2 <emphasis role="stringliteral">#&#32;This&#32;is&#32;a&#32;post-commit&#32;hook&#32;generated&#32;by&#32;penify-cli.</emphasis>
3 <emphasis role="stringliteral"></emphasis>
4 <emphasis role="stringliteral">penify-cli&#32;-t&#32;{token}&#32;-gf&#32;{git_folder_path}</emphasis>
5 <emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
</programlisting></section>
</section>
</section>
